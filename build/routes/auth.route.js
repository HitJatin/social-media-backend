"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const express_1 = require("express");
const auth_controller_1 = require("../controllers/auth.controller");
const auth_validators_1 = require("../validators/auth.validators");
const auth_middleware_1 = require("../middleware/auth.middleware");
const router = (0, express_1.Router)();
router.post("/signup", auth_validators_1.validateSignupInfo, auth_controller_1.signup);
router.post("/resend-token", auth_validators_1.validateResendTokenInfo, auth_controller_1.resendToken);
router.get("/verify", auth_validators_1.validateActivationInfo, auth_controller_1.activateAccount);
router.post("/signin", auth_validators_1.validateSigninInfo, auth_controller_1.signin);
router.get("/user-private", auth_middleware_1.verifyToken, auth_controller_1.getUserData);
router.get("/user-public", auth_validators_1.validatePublicUserInfo, auth_controller_1.getPublicUserData);
router.post("/reset-pass", [auth_middleware_1.verifyToken, auth_validators_1.validateResetPassInfo], auth_controller_1.resetPass);
router.get("/logout", auth_middleware_1.verifyToken, auth_controller_1.signout);
router.post("/forgot-pass", auth_validators_1.validateForgetPassInfo, auth_controller_1.forgetPass);
router.post("/verify-forgot", auth_validators_1.validateVerifyPassInfo, auth_controller_1.verifyPass);
router.put("/update", [auth_middleware_1.verifyToken, auth_validators_1.validateUpdateUserInfo], auth_controller_1.updateUser);
router.delete("/delete", auth_middleware_1.verifyToken, auth_controller_1.deleteUser);
exports.default = router;
